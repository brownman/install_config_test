shopt -s expand_aliases
set -u



export PS4=' ${SHLVL}:"$(basename ${BASH_SOURCE:-$0})":${LINENO}(${FUNCNAME[0]})'
############################################## on demand
export cmd_trap_err='trap trap_err ERR'
export cmd_caller='echo 1>&2 "[CALLER] $(caller)"'
################################### system
export DEBIAN_FRONTEND=noninteractive
############################################## custom names
export APP_NAME='myApp'
export VER_MEAN_CLI='0.9.3'
##############################################dir - structure
export dir_base='/opt'
export path_my_app="$dir_base"
export dir_my_app="$dir_base/$APP_NAME"
export dir_nodejs="$dir_base/nodejs"
export dir_gitlab_ci_runner_repo="$dir_base/gitlab-ci-runner.git"
############################################### helpers
print_func(){
trace_n '--------------->'
trace_n "${FUNCNAME[1]}"
trace '<---------------'
}
mkdir1(){
  local dir="$1" 
  test -d $dir || { mkdir -p $dir; }
  ensure "test -d $dir"
}

####################################################################

trap_err(){
  print_line
  echo "$FUNCNAME"
  exit 1
}
print_line(){
trace '--------------------------'
}

trace(){
echo 1>&2 "$@"
}
trace_n(){
echo  1>&2 -ne $@
}

print_color_n () 
{ 
     if [ $# -gt 1 ]; then
        local color=$1;
         shift;
        local args="${@:-?}";
        echo -en "\x1B[01;${color}m[*]\x1B[0m ${args} " 1>&2;
    fi
}
print_color () 
{ 
    local args=( $@ )
    local cmd="${args[@]}"
 print_color_n "$cmd"
 trace '.'
}

print_ok(){
        print_color  32 '.'
        #'[V]'
}

print_error(){
        print_color  31 '.'
        #'[X]'
}


indicator () 
{ 
    local res_last=${1:-$?};
    local num="${1:-$res_last}";
    if [ $num -eq 0 ]; then
        print_ok;
    else
        print_error;
    fi;
    return $num
}


commander(){
    local args=( $@ )
    local cmd="${args[@]}"
eval "$cmd_caller"

    trace "[CMD] $cmd" 
    eval "$cmd" || { exit 1; }
    #|| { exiting; }
    #indicator $? - no sense here
}

mute(){
    local args=( $@ )
    local cmd="${args[@]}"
    trace_n "[MUTE] $cmd" 
    eval "$cmd" 1>/tmp/out 2>/tmp/err || { exiting; }
    indicator $?
}


###################################### #var
distro_name(){
        echo $(lsb_release -sc)
}


ensure(){
    local args=( $@ )
    local cmd="${args[@]}"
  eval "$cmd_caller"
  (  commander "$cmd"; ) || { exit 1; }
}

set_mode(){
export MODE_DEBUG=${MODE_DEBUG:-false}
print_line
trace "[MODE DEBUG] $MODE_DEBUG"
print_line
if [ "$MODE_DEBUG" = false ];then
     alias commander=mute
fi
}
cat1(){
local file=$1

test -f $file  && (
print_line
trace "[file] $file"
print_line
cat -n 1>&2 $file
print_line; 
)
}

exiting(){
local num=${1:-1} #default: assume err
print_func
sleep 1
exit $num
}

init_cfg(){
local dir=$dir_base
 sudo chmod 777 $dir;
}

export -f init_cfg
export -f set_mode
export -f print_ok
export -f print_error
export -f indicator
export -f print_color
export -f print_color_n
export -f commander
export -f mute
export -f trace
export -f distro_name
export -f trap_err
export -f mkdir1
export -f ensure
export -f print_line
export -f exiting
export -f print_func
export -f trace_n
export -f cat1
